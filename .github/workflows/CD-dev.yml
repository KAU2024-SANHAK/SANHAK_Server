# 워크플로우의 이름 지정
name: Sanhak Server CD (Develop)

# 해당 workflow가 언제 실행될 것인지에 대한 트리거를 지정
on:
  push:
    branches: [ "chore/#3-cicd_settings" ]

env:
  S3_BUCKET_NAME: kkoolbee-storage

jobs:
  build:
    name: Code deployment

    # 실행 환경
    runs-on: ubuntu-latest

    steps:

    # 1) 워크플로우 실행 전 기본적으로 체크아웃 필요
    - name: checkout
      uses: actions/checkout@v3

    # 2) JDK 17버전 설치, 다른 JDK 버전을 사용하다면 수정
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-northeast-2

    # 3) AWS Secrets Manger 환경변수 사용
    - name: Read secrets from AWS Secrets Manager into environment variables
      uses: abhilash1in/aws-secrets-manager-action@v1.1.0
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-northeast-2
        secrets: /secret/kkoolbee
        parse-json: false

    # 이 워크플로우는 gradle build
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle # 실제 application build (-x 옵션을 통해 test는 제외)
      run: ./gradlew build -x test

    # 디렉토리 생성
    - name: Make Directory
      run: mkdir -p deploy

    # Jar 파일 복사
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy

    # appspec.yml, script files 파일 복사
    - name: Copy files
      run: cp ./scripts/* ./deploy

    - name: Make zip file
      run: zip -r ./sanhak-server.zip ./deploy
      shell: bash

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./sanhak-server.zip s3://$S3_BUCKET_NAME/

    # Deploy
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      run:
        aws deploy create-deployment
        --application-name sanhak-server-codedeploy
        --deployment-group-name sanhak-server-codedeploy-group
        --file-exists-behavior OVERWRITE
        --s3-location bucket=kkoolbee-storage,bundleType=zip,key=sanhak-server.zip
        --region ap-northeast-2